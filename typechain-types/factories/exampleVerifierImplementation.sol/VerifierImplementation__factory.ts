/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  VerifierImplementation,
  VerifierImplementationInterface,
} from "../../exampleVerifierImplementation.sol/VerifierImplementation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "b_0",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "b_1",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[1]",
        name: "input",
        type: "uint256[1]",
      },
    ],
    name: "VerifyExample",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[1]",
        name: "input",
        type: "uint256[1]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611265806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634033ceed1461003b57806343753b4d14610062575b600080fd5b61004e610049366004611060565b610075565b604051901515815260200160405180910390f35b61004e6100703660046110cc565b6100a3565b6000806100988760405180604001604052808981526020018881525086866100a3565b979650505050505050565b60006100ad610e29565b60408051808201825287518152602080890151818301529083528151608081018352875151818401908152885183015160608301528152825180840184528883018051518252518301518184015281830152838201528151808301835286518152868201518183015283830152815160018082528184019093526000929091828101908036833701905050905060005b600181101561018c578481600181106101585761015861116c565b602002015182828151811061016f5761016f61116c565b60209081029190910101528061018481611198565b91505061013d565b5061019781836101b8565b6000036101a9576001925050506101b0565b6000925050505b949350505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816101e46103ba565b9050806080015151855160016101fa91906111d0565b1461024c5760405162461bcd60e51b815260206004820152601260248201527f76657269666965722d6261642d696e707574000000000000000000000000000060448201526064015b60405180910390fd5b604080518082019091526000808252602082018190525b865181101561033d578387828151811061027f5761027f61116c565b6020026020010151106102d45760405162461bcd60e51b815260206004820152601f60248201527f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c64006044820152606401610243565b6103298261032485608001518460016102ed91906111d0565b815181106102fd576102fd61116c565b60200260200101518a85815181106103175761031761116c565b6020026020010151610753565b6107f4565b91508061033581611198565b915050610263565b506103668183608001516000815181106103595761035961116c565b60200260200101516107f4565b905061039c6103788660000151610898565b8660200151846000015185602001518587604001518b604001518960600151610937565b6103ac57600193505050506103b4565b600093505050505b92915050565b6103c2610e7a565b6040805180820182527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e281527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d19266020808301919091529083528151608080820184527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c8285019081527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab606080850191909152908352845180860186527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a781527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8818601528385015285840192909252835180820185527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28186019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed828501528152845180860186527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa818601528185015285850152835190810184527f2ecfc70875cc3e16e661354a0c7b8d2016d1f4093cb6b30ef164c5d10f91ebfd8185019081527f052757557db49bfeda9f535bc3ef8e5a51fd2fbcb97bef2fd74abcd4d3f94dcd828401528152835180850185527f043f4bb541e209469fdd87ced06abb9a842aabeb5162cdb47368d5e188afe82c81527f02206ab59a572fd82aa7c2ce27818d40c1bf15e65907386f6946934487eaf0e6818501528184015281850152825160028082529181019093529082015b604080518082019091526000808252602082015281526020019060019003908161063b57505060808201908152604080518082019091527f05351887c6ca8ac17521a875c763573311f09b0285d5c6246ca8c06c6731ac3081527f1a66e0a84c42b5c6b75f1f79bd5803346937193b7ecbe8005777b020dd8135b16020820152905180516000906106ce576106ce61116c565b602002602001018190525060405180604001604052807f27890d5f3cdd70f4205d0f7173927374bff334e68cc531b57f158ef8019bdffb81526020017f29cd386360b0c1e935715c99a3e1f741ec0eab67ecb7ca643bfc87163cab531581525081608001516001815181106107455761074561116c565b602002602001018190525090565b604080518082019091526000808252602082015261076f610ecb565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa9050808061079e57fe5b50806107ec5760405162461bcd60e51b815260206004820152601260248201527f70616972696e672d6d756c2d6661696c656400000000000000000000000000006044820152606401610243565b505092915050565b6040805180820190915260008082526020820152610810610ee9565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa9050808061084a57fe5b50806107ec5760405162461bcd60e51b815260206004820152601260248201527f70616972696e672d6164642d6661696c656400000000000000000000000000006044820152606401610243565b604080518082019091526000808252602082015281517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47901580156108df57506020830151155b156108ff5750506040805180820190915260008082526020820152919050565b60405180604001604052808460000151815260200182856020015161092491906111e3565b61092e9084611205565b90529392505050565b60408051600480825260a08201909252600091829190816020015b604080518082019091526000808252602082015281526020019060019003908161095257505060408051600480825260a0820190925291925060009190602082015b61099c610f07565b8152602001906001900390816109945790505090508a826000815181106109c5576109c561116c565b602002602001018190525088826001815181106109e4576109e461116c565b60200260200101819052508682600281518110610a0357610a0361116c565b60200260200101819052508482600381518110610a2257610a2261116c565b60200260200101819052508981600081518110610a4157610a4161116c565b60200260200101819052508781600181518110610a6057610a6061116c565b60200260200101819052508581600281518110610a7f57610a7f61116c565b60200260200101819052508381600381518110610a9e57610a9e61116c565b6020026020010181905250610ab38282610ac2565b9b9a5050505050505050505050565b60008151835114610b155760405162461bcd60e51b815260206004820152601660248201527f70616972696e672d6c656e677468732d6661696c6564000000000000000000006044820152606401610243565b82516000610b24826006611218565b905060008167ffffffffffffffff811115610b4157610b41610f63565b604051908082528060200260200182016040528015610b6a578160200160208202803683370190505b50905060005b83811015610da557868181518110610b8a57610b8a61116c565b60200260200101516000015182826006610ba49190611218565b610baf9060006111d0565b81518110610bbf57610bbf61116c565b602002602001018181525050868181518110610bdd57610bdd61116c565b60200260200101516020015182826006610bf79190611218565b610c029060016111d0565b81518110610c1257610c1261116c565b602002602001018181525050858181518110610c3057610c3061116c565b6020908102919091010151515182610c49836006611218565b610c549060026111d0565b81518110610c6457610c6461116c565b602002602001018181525050858181518110610c8257610c8261116c565b60209081029190910181015151015182610c9d836006611218565b610ca89060036111d0565b81518110610cb857610cb861116c565b602002602001018181525050858181518110610cd657610cd661116c565b602002602001015160200151600060028110610cf457610cf461116c565b602002015182610d05836006611218565b610d109060046111d0565b81518110610d2057610d2061116c565b602002602001018181525050858181518110610d3e57610d3e61116c565b602002602001015160200151600160028110610d5c57610d5c61116c565b602002015182610d6d836006611218565b610d789060056111d0565b81518110610d8857610d8861116c565b602090810291909101015280610d9d81611198565b915050610b70565b50610dae610f27565b6000602082602086026020860160086107d05a03fa90508080610dcd57fe5b5080610e1b5760405162461bcd60e51b815260206004820152601560248201527f70616972696e672d6f70636f64652d6661696c656400000000000000000000006044820152606401610243565b505115159695505050505050565b6040805160a081019091526000606082018181526080830191909152815260208101610e53610f07565b8152602001610e75604051806040016040528060008152602001600081525090565b905290565b6040805160e08101909152600060a0820181815260c0830191909152815260208101610ea4610f07565b8152602001610eb1610f07565b8152602001610ebe610f07565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518060400160405280610f1a610f45565b8152602001610e75610f45565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610f9c57610f9c610f63565b60405290565b600082601f830112610fb357600080fd5b610fbb610f79565b806040840185811115610fcd57600080fd5b845b81811015610fe7578035845260209384019301610fcf565b509095945050505050565b600082601f83011261100357600080fd5b604051602080820182811067ffffffffffffffff8211171561102757611027610f63565b604052818482018681111561103b57600080fd5b855b81811015611054578035835291830191830161103d565b50929695505050505050565b6000806000806000610120868803121561107957600080fd5b6110838787610fa2565b94506110928760408801610fa2565b93506110a18760808801610fa2565b92506110b08760c08801610fa2565b91506110c0876101008801610ff2565b90509295509295909350565b60008060008061012085870312156110e357600080fd5b6110ed8686610fa2565b9350604086605f87011261110057600080fd5b611108610f79565b8060c088018981111561111a57600080fd5b8389015b8181101561113f576111308b82610fa2565b8452602090930192840161111e565b5081965061114d8a82610fa2565b955050505050611161866101008701610ff2565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036111c9576111c9611182565b5060010190565b808201808211156103b4576103b4611182565b60008261120057634e487b7160e01b600052601260045260246000fd5b500690565b818103818111156103b4576103b4611182565b80820281158282048414176103b4576103b461118256fea264697066735822122002af88bd9ddc81f075f40fd46d6228e6f260c0365899ff3056cbbeefe53fadf364736f6c63430008110033";

type VerifierImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifierImplementation__factory extends ContractFactory {
  constructor(...args: VerifierImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VerifierImplementation> {
    return super.deploy(overrides || {}) as Promise<VerifierImplementation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VerifierImplementation {
    return super.attach(address) as VerifierImplementation;
  }
  override connect(signer: Signer): VerifierImplementation__factory {
    return super.connect(signer) as VerifierImplementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierImplementationInterface {
    return new utils.Interface(_abi) as VerifierImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifierImplementation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VerifierImplementation;
  }
}
