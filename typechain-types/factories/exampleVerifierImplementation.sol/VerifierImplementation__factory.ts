/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  VerifierImplementation,
  VerifierImplementationInterface,
} from "../../exampleVerifierImplementation.sol/VerifierImplementation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "b_0",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "b_1",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[1]",
        name: "input",
        type: "uint256[1]",
      },
    ],
    name: "VerifyExample",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[1]",
        name: "input",
        type: "uint256[1]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061128e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634033ceed1461003b57806343753b4d14610062575b600080fd5b61004e6100493660046110e8565b610075565b604051901515815260200160405180910390f35b61004e61007036600461103f565b6100a3565b6000806100988760405180604001604052808981526020018881525086866100a3565b979650505050505050565b60006100ad610e2a565b60408051808201825287518152602080890151818301529083528151608081018352875151818401908152885183015160608301528152825180840184528883018051518252518301518184015281830152838201528151808301835286518152868201518183015283830152815160018082528184019093526000929091828101908036833701905050905060005b600181101561018c578481600181106101585761015861122c565b602002015182828151811061016f5761016f61122c565b602090810291909101015280610184816111d9565b91505061013d565b5061019781836101b5565b6101a6576001925050506101ad565b6000925050505b949350505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816101e16103b7565b9050806080015151855160016101f7919061118b565b146102495760405162461bcd60e51b815260206004820152601260248201527f76657269666965722d6261642d696e707574000000000000000000000000000060448201526064015b60405180910390fd5b604080518082019091526000808252602082018190525b865181101561033a578387828151811061027c5761027c61122c565b6020026020010151106102d15760405162461bcd60e51b815260206004820152601f60248201527f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c64006044820152606401610240565b6103268261032185608001518460016102ea919061118b565b815181106102fa576102fa61122c565b60200260200101518a85815181106103145761031461122c565b6020026020010151610750565b6107f7565b915080610332816111d9565b915050610260565b506103638183608001516000815181106103565761035661122c565b60200260200101516107f7565b9050610399610375866000015161089a565b8660200151846000015185602001518587604001518b604001518960600151610939565b6103a957600193505050506103b1565b600093505050505b92915050565b6103bf610e7b565b6040805180820182527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e281527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d19266020808301919091529083528151608080820184527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c8285019081527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab606080850191909152908352845180860186527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a781527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8818601528385015285840192909252835180820185527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28186019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed828501528152845180860186527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa818601528185015285850152835190810184527f2ecfc70875cc3e16e661354a0c7b8d2016d1f4093cb6b30ef164c5d10f91ebfd8185019081527f052757557db49bfeda9f535bc3ef8e5a51fd2fbcb97bef2fd74abcd4d3f94dcd828401528152835180850185527f043f4bb541e209469fdd87ced06abb9a842aabeb5162cdb47368d5e188afe82c81527f02206ab59a572fd82aa7c2ce27818d40c1bf15e65907386f6946934487eaf0e6818501528184015281850152825160028082529181019093529082015b604080518082019091526000808252602082015281526020019060019003908161063857505060808201908152604080518082019091527f05351887c6ca8ac17521a875c763573311f09b0285d5c6246ca8c06c6731ac3081527f1a66e0a84c42b5c6b75f1f79bd5803346937193b7ecbe8005777b020dd8135b16020820152905180516000906106cb576106cb61122c565b602002602001018190525060405180604001604052807f27890d5f3cdd70f4205d0f7173927374bff334e68cc531b57f158ef8019bdffb81526020017f29cd386360b0c1e935715c99a3e1f741ec0eab67ecb7ca643bfc87163cab531581525081608001516001815181106107425761074261122c565b602002602001018190525090565b604080518082019091526000808252602082015261076c610ecc565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561079f576107a1565bfe5b50806107ef5760405162461bcd60e51b815260206004820152601260248201527f70616972696e672d6d756c2d6661696c656400000000000000000000000000006044820152606401610240565b505092915050565b6040805180820190915260008082526020820152610813610eea565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561079f5750806107ef5760405162461bcd60e51b815260206004820152601260248201527f70616972696e672d6164642d6661696c656400000000000000000000000000006044820152606401610240565b604080518082019091526000808252602082015281517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47901580156108e157506020830151155b156109015750506040805180820190915260008082526020820152919050565b60405180604001604052808460000151815260200182856020015161092691906111f4565b61093090846111c2565b90529392505050565b60408051600480825260a08201909252600091829190816020015b604080518082019091526000808252602082015281526020019060019003908161095457505060408051600480825260a0820190925291925060009190602082015b61099e610f08565b8152602001906001900390816109965790505090508a826000815181106109c7576109c761122c565b602002602001018190525088826001815181106109e6576109e661122c565b60200260200101819052508682600281518110610a0557610a0561122c565b60200260200101819052508482600381518110610a2457610a2461122c565b60200260200101819052508981600081518110610a4357610a4361122c565b60200260200101819052508781600181518110610a6257610a6261122c565b60200260200101819052508581600281518110610a8157610a8161122c565b60200260200101819052508381600381518110610aa057610aa061122c565b6020026020010181905250610ab58282610ac4565b9b9a5050505050505050505050565b60008151835114610b175760405162461bcd60e51b815260206004820152601660248201527f70616972696e672d6c656e677468732d6661696c6564000000000000000000006044820152606401610240565b82516000610b268260066111a3565b905060008167ffffffffffffffff811115610b4357610b43611242565b604051908082528060200260200182016040528015610b6c578160200160208202803683370190505b50905060005b83811015610da757868181518110610b8c57610b8c61122c565b60200260200101516000015182826006610ba691906111a3565b610bb190600061118b565b81518110610bc157610bc161122c565b602002602001018181525050868181518110610bdf57610bdf61122c565b60200260200101516020015182826006610bf991906111a3565b610c0490600161118b565b81518110610c1457610c1461122c565b602002602001018181525050858181518110610c3257610c3261122c565b6020908102919091010151515182610c4b8360066111a3565b610c5690600261118b565b81518110610c6657610c6661122c565b602002602001018181525050858181518110610c8457610c8461122c565b60209081029190910181015151015182610c9f8360066111a3565b610caa90600361118b565b81518110610cba57610cba61122c565b602002602001018181525050858181518110610cd857610cd861122c565b602002602001015160200151600060028110610cf657610cf661122c565b602002015182610d078360066111a3565b610d1290600461118b565b81518110610d2257610d2261122c565b602002602001018181525050858181518110610d4057610d4061122c565b602002602001015160200151600160028110610d5e57610d5e61122c565b602002015182610d6f8360066111a3565b610d7a90600561118b565b81518110610d8a57610d8a61122c565b602090810291909101015280610d9f816111d9565b915050610b72565b50610db0610f28565b6000602082602086026020860160086107d05a03fa905080801561079f575080610e1c5760405162461bcd60e51b815260206004820152601560248201527f70616972696e672d6f70636f64652d6661696c656400000000000000000000006044820152606401610240565b505115159695505050505050565b6040805160a081019091526000606082018181526080830191909152815260208101610e54610f08565b8152602001610e76604051806040016040528060008152602001600081525090565b905290565b6040805160e08101909152600060a0820181815260c0830191909152815260208101610ea5610f08565b8152602001610eb2610f08565b8152602001610ebf610f08565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518060400160405280610f1b610f46565b8152602001610e76610f46565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b600082601f830112610f7557600080fd5b604051602080820182811067ffffffffffffffff82111715610fa757634e487b7160e01b600052604160045260246000fd5b6040528184828101871015610fbb57600080fd5b60005b6001811015610fdb57813583529183019190830190600101610fbe565b50929695505050505050565b600082601f830112610ff857600080fd5b611000611154565b80838560408601111561101257600080fd5b60005b6002811015611034578135845260209384019390910190600101611015565b509095945050505050565b600080600080610120858703121561105657600080fd5b6110608686610fe7565b9350604086605f87011261107357600080fd5b61107b611154565b8082880160c089018a81111561109057600080fd5b60005b60028110156110ba576110a68c84610fe7565b855260209094019391850191600101611093565b508297506110c88b82610fe7565b965050505050506110dd866101008701610f64565b905092959194509250565b6000806000806000610120868803121561110157600080fd5b61110b8787610fe7565b945061111a8760408801610fe7565b93506111298760808801610fe7565b92506111388760c08801610fe7565b9150611148876101008801610f64565b90509295509295909350565b6040805190810167ffffffffffffffff8111828210171561118557634e487b7160e01b600052604160045260246000fd5b60405290565b6000821982111561119e5761119e611216565b500190565b60008160001904831182151516156111bd576111bd611216565b500290565b6000828210156111d4576111d4611216565b500390565b60006000198214156111ed576111ed611216565b5060010190565b60008261121157634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b4b690291c94ef4e586472997a899d63603f0d8ce8ba7ccffd3b6a9323b3609c64736f6c63430008070033";

type VerifierImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifierImplementation__factory extends ContractFactory {
  constructor(...args: VerifierImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VerifierImplementation> {
    return super.deploy(overrides || {}) as Promise<VerifierImplementation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VerifierImplementation {
    return super.attach(address) as VerifierImplementation;
  }
  override connect(signer: Signer): VerifierImplementation__factory {
    return super.connect(signer) as VerifierImplementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierImplementationInterface {
    return new utils.Interface(_abi) as VerifierImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifierImplementation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VerifierImplementation;
  }
}
